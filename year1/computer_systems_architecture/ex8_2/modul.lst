     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global modul       
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                  
    15                                      
    16                                  ; our code starts here
    17                                  segment code use32 class=code
    18                                      modul:
    19                                          ; ...
    20                                          
    21 00000000 8B542404                        mov edx,[esp+4]
    22 00000004 BF00000000                      mov edi,0
    23 00000009 8B5C2414                        mov ebx,[esp+20]
    24 0000000D BE00000000                      mov esi,0
    25 00000012 8B4C2410                        mov ecx,[esp+16]
    26                                          sir1:
    27 00000016 8A0433                              mov al,byte[ebx+esi]
    28 00000019 88043A                              mov byte[edx+edi],al
    29 0000001C 46                                  inc esi
    30 0000001D 47                                  inc edi
    31 0000001E E2F6                                loop sir1
    32 00000020 8B5C240C                        mov ebx,[esp+12]
    33 00000024 BE00000000                      mov esi,0
    34 00000029 8B4C2408                        mov ecx,[esp+8]
    35                                          sir2:
    36 0000002D 8A0433                              mov al,byte[ebx+esi]
    37 00000030 88043A                              mov byte[edx+edi],al
    38 00000033 46                                  inc esi
    39 00000034 47                                  inc edi
    40 00000035 E2F6                                loop sir2
    41 00000037 C6043A00                        mov byte[edx+edi],0
    42 0000003B C3                              ret
    43                                          
    44                                          ; exit(0)
    45 0000003C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 0000003E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
